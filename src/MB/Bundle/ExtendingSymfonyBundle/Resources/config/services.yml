services:
#    mb_extending_symfony.example:
#        class: MB\Bundle\ExtendingSymfonyBundle\Example
#        arguments: [@service_id, "plain_value", %parameter%]
    geocoder_adapter:
        class: Geocoder\HttpAdapter\CurlHttpAdapter
        public: false

    geocoder_provider:
        class: Geocoder\Provider\FreeGeoIpProvider
        public: false
        arguments: [ @geocoder_adapter ]

    geocoder:
        class: Geocoder\Geocoder
        calls:
            - [ registerProviders, [[ @geocoder_provider ]] ]

    freegeoip_geocoder:
        class: MB\Bundle\ExtendingSymfonyBundle\Geo\FreeGeoIpGeocoder
        arguments: [ @geocoder ]
        tags:
            - { name: mb.geocoder, accuracy: 100 }

    random_geocoder:
        class: MB\Bundle\ExtendingSymfonyBundle\Geo\RandomLocationGeocoder
        tags:
            - { name: mb.geocoder, accuracy: 0 }

    mb.user_locator:
        class: MB\Bundle\ExtendingSymfonyBundle\Geo\UserLocator
        scope: request
        arguments: [ @request ]

    join_meetup_listener:
        class: MB\Bundle\ExtendingSymfonyBundle\Event\JoinMeetupListener
        tags:
            - { name: kernel.event_listener, event: meetup.join, method: onUserJoinsMeetup }
            - { name: kernel.event_listener, event: kernel.terminate, method: generatePreferences }

    imagine:
        class: Imagine\Gd\Imagine

    mb.shrinker:
        class: MB\Bundle\ExtendingSymfonyBundle\Command\Shrinker
        arguments: [ @imagine ]

    mb.twig.js_extension:
        class: MB\Bundle\ExtendingSymfonyBundle\Twig\JSExtension
        tags:
            - { name: twig.extension }

    mb.twig.date_diff_extension:
        class: MB\Bundle\ExtendingSymfonyBundle\Twig\DateDifferenceExtension
        tags:
            - { name: twig.extension }

    mb.twig.date_diff_filter_extension:
        class: MB\Bundle\ExtendingSymfonyBundle\Twig\DateDifferenceFilterExtension
        tags:
            - { name: twig.extension }

    mb.form.type.coordinate:
        class: MB\Bundle\ExtendingSymfonyBundle\Form\Type\CoordinateType
        scope: prototype
        arguments: [ @ivory_google_map.map, @mb.user_locator ]
        tags:
            - { name: form.type, alias: mb_coordinate }